```yaml
# Example config.yaml for Azure to NetBox Sync Script
# This includes the organization section with per-region tag colors, 
# as well as other common sections (e.g., tenancy, tags, etc.).
# Adjust values as needed for your environment.

# NetBox Configuration (optional; can be passed via CLI args)
netbox:
  url: "https://your-netbox-instance/api"  # NetBox API URL
  token: "your-netbox-api-token"  # NetBox API token

# Azure Configuration
azure:
  authentication:
    method: "default"  # Options: default, interactive, or service principal
    client_id: "your-client-id"  # For service principal
    client_secret: "your-client-secret"
    tenant_id: "your-tenant-id"
  subscriptions:
    process_all: true  # Set to false if using specific_id or management_group
    specific_id: ""  # Optional: Process only this subscription ID
    management_group:
      id: ""  # Optional: Management Group ID
      name: ""  # Optional: Management Group name

# Logging Configuration
logging:
  level: "INFO"  # Options: DEBUG, INFO, WARNING, ERROR
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Tags Configuration
tags:
  default_color: "00ff00"  # Global fallback for tags (e.g., green)
  sync_tag:  # Special "azure-sync" tag
    name: "azure-sync"
    description: "Synced from Azure"
    color: "aa1409"  # Red
  additional_tags: []  # Optional: List of additional tags to apply

# Tenancy Configuration (from your original example)
tenancy:
  default_group: "AZURE"
  groups:  # Changed to 'groups' (list) for consistency; was 'group' in your snippet
    - name: "AZURE"
      slug: "azure"
      description: "AZURE Cloud Tenants"
  tenant_tags:
    - name: "AZURE"
      color: "00ff00"  # Green

# Organization Configuration (updated for per-region colors)
# Regions: Use a list of dicts under 'mapping' for per-region customization.
# Each entry can specify 'color' (overrides default from region_tags.default_color).
organization:
  site_group:
    name: "Azure Sites"
    description: "Group for all Azure-related sites"
  site_prefix: "Azure - "  # Prefix for site names (e.g., "Azure - MyVNet (France Central)")
  regions:
    mapping:  # List of dicts for regions (add as many as needed)
      - azure_location: francecentral
        tag_name: FRC
        color: "00ff00"  # Green for FRC tag
      - azure_location: westeurope
        tag_name: EUW
        color: "ff0000"  # Red for EUW tag
      - azure_location: eastus
        tag_name: EUS
        color: "0000ff"  # Blue for EUS tag
      - azure_location: westus
        tag_name: WUS
        color: "ffff00"  # Yellow for WUS tag
      - azure_location: northeurope
        tag_name: EUN
        color: "800080"  # Purple for EUN tag
      - azure_location: uksouth
        tag_name: UKS
        # No 'color' specified: Will use region_tags.default_color ("aaaaaa" gray)
      # Add more regions as needed...
    region_tags:  # Defaults for tags (applied if not overridden in mapping)
      default_color: "aaaaaa"  # Gray fallback if no per-region color
      default_description_prefix: "Azure Region: "  # Prefix for tag/region descriptions

# Other Optional Sections (examples; add as needed)
rirs:  # RIRs for aggregates
  - name: "Private"
    slug: "private"
    description: "Private IP Space"
    is_private: true

aggregates:  # Aggregates to create
  - prefix: "10.0.0.0/8"
    rir: "Private"
    description: "RFC1918 Private Space"
    tags: []

ipam_roles:  # IPAM Roles
  - name: "VNet"
    slug: "vnet"
    description: "Azure Virtual Network"
    tags: []

custom_fields:  # Custom fields for prefixes
  azure_subscription:
    enabled: true
    field_type: "text"
    description: "Azure subscription name"
  azure_subscription_url:
    enabled: true
    field_type: "url"
    description: "Direct link to Azure subscription portal"

peering:  # Peering check configuration
  enabled: true
  ok_value: "✅"
  ko_value: "❌"
  no_peerings_value: "No peerings"

# SSL and Timeouts (optional)
ssl:
  verify: true  # Verify SSL certificates

timeouts:
  netbox_api: 30  # Timeout for NetBox API requests (seconds)
```
