1Ô∏è‚É£ Racine ‚Äì main.tf
terraform {
  required_version = ">= 1.3"

  # ‚Üê‚ÄØnouveau provider, pas le "cloudnativeapp"‚ÄØ!
  required_providers {
    netbox = {
      # L‚Äôalias est le m√™me que le provider : "netbox"
      source  = "e-breuninger/netbox"
      version = ">= 1.3.0"          # ‚Üê‚ÄØchoisissez la derni√®re version stable
    }
  }
}

# --------------------------------------------------------------------------
#  Providers (exemple avec 2 environnements : prod & staging)
# --------------------------------------------------------------------------
#  ‚Ä¢  "prod"   ‚Äì URL + token prod
#  ‚Ä¢  "staging" ‚Äì URL + token staging
# --------------------------------------------------------------------------
provider "netbox" {
  alias          = "prod"
  url            = var.netbox_prod_url
  token          = var.netbox_prod_token
  skip_tls_verify = true
}

provider "netbox" {
  alias          = "staging"
  url            = var.netbox_staging_url
  token          = var.netbox_staging_token
  skip_tls_verify = true
}

# --------------------------------------------------------------------------
#  Variables globales (URL + token)
# --------------------------------------------------------------------------
variable "netbox_prod_url"        { type = string; default = "https://netbox.prod.example.com" }
variable "netbox_prod_token"      { type = string; sensitive = true }

variable "netbox_staging_url"    { type = string; default = "https://netbox.staging.example.com" }
variable "netbox_staging_token"  { type = string; sensitive = true }

# --------------------------------------------------------------------------
#  Liste de r√©servations (exemple avec 2 aggregates)
# --------------------------------------------------------------------------
locals {
  reservations = [
    {
      name          = "private_rfc1918"
      aggregate_id  = 10                      # ID d‚Äôun aggregate 10.0.0.0/8
      prefix_length = 24
      tag_ids       = []
      env          = "prod"                    # <-- alias √† passer au module
    },
    {
      name          = "bgp_public"
      aggregate_id  = 20                      # ID d‚Äôun aggregate 203.0.113.0/24
      prefix_length = 24
      tag_ids       = ["bgp"]
      env          = "staging"                # <-- alias √† passer au module
    }
  ]
}

# --------------------------------------------------------------------------
#  Instanciation du module ‚Äúprefix_alloc‚Äù pour chaque r√©servation
# --------------------------------------------------------------------------
module "prefix_alloc" {
  for_each = { for r in local.reservations : r.name => r }

  source       = "./modules/prefix_alloc"
  aggregate_id = each.value.aggregate_id
  prefix_length = each.value.prefix_length
  tag_ids     = each.value.tag_ids
  description = "Allocated by Terraform (${each.key})"
  role        = null
  status      = "active"

  # *** Pass the provider alias ***
  providers = {
    netbox = netbox[each.value.env]   # ‚Üí  netbox.prod  ou  netbox.staging
  }
}

# --------------------------------------------------------------------------
#  Sorties
# --------------------------------------------------------------------------
output "allocated_prefixes" {
  description = "Map de nom => CIDR allou√©"
  value       = { for k, m in module.prefix_alloc : k => m.allocated_prefix }
}

output "allocated_prefix_ids" {
  description = "Map de nom => ID NetBox du prefix allou√©"
  value       = { for k, m in module.prefix_alloc : k => m.allocated_prefix_id }
}
2Ô∏è‚É£ Variables globales ‚Äì variables.tf
(aucune modification‚ÄØ‚Äì‚ÄØles variables restent les m√™mes, on ne donne pas de default pour le token)

variable "netbox_prod_url"        { type = string; default = "https://netbox.prod.example.com" }
variable "netbox_prod_token"      { type = string; sensitive = true }
variable "netbox_staging_url"    { type = string; default = "https://netbox.staging.example.com" }
variable "netbox_staging_token"  { type = string; sensitive = true }
Si vous pr√©f√©rez mettre les tokens dans l‚Äôenvironnement‚ÄØ:

export TF_VAR_netbox_prod_token="xxxx‚Ä¶"
export TF_VAR_netbox_staging_token="yyyy‚Ä¶"
3Ô∏è‚É£ Module ‚Äì modules/prefix_alloc/main.tf
Aucun bloc provider ‚Äì Terraform l‚Äôinjecte depuis la racine via providers = { netbox = netbox.prod }.

# ‚îÄ‚îÄ Recherche d‚Äôun /24 disponible -------------------------------
data "netbox_prefix" "available_prefix" {
  available = true
  container = var.aggregate_id
  length    = var.prefix_length
  tags      = var.tag_ids
}

# ‚îÄ‚îÄ Cr√©ation du prefix --------------------------------------------
resource "netbox_prefix" "allocated" {
  prefix      = data.netbox_prefix.available_prefix.prefix
  description = var.description
  role        = var.role
  status      = var.status
  tags        = var.tag_ids
}
4Ô∏è‚É£ Variables du module ‚Äì modules/prefix_alloc/variables.tf
(inchang√©, reste le m√™me)

variable "aggregate_id"  { type = number }
variable "prefix_length" { type = number }
variable "tag_ids"       { type = list(string); default = [] }
variable "description"   { type = string }
variable "role"          { type = string; default = null }
variable "status"        { type = string; default = null }
5Ô∏è‚É£ Sorties du module ‚Äì modules/prefix_alloc/outputs.tf
output "allocated_prefix"   { value = netbox_prefix.allocated.prefix }
output "allocated_prefix_id" { value = netbox_prefix.allocated.id }
6Ô∏è‚É£ Mise √† jour finale
Supprimez l‚Äôancien provider (cloudnativeapp/netbox) du bloc required_providers.
Ajoutez le bloc required_providers comme ci‚Äëdessus.
D√©clarez vos providers netbox avec les alias souhait√©s.
Passez l‚Äôalias dans le bloc providers du module (voir main.tf).
Ex√©cutez :
terraform init          # t√©l√©charge le nouveau provider
terraform plan          # v√©rifie le plan
terraform apply         # applique
üìå V√©rification rapide
Dans le plan vous devez voir‚ÄØ:
netbox_prefix.allocated cr√©√©s dans l‚ÄôURL/token correspondant √† l‚Äôalias (prod ou staging).
Si vous ne voyez pas la ressource, ex√©cutez terraform show pour v√©rifier que le provider correct est utilis√© (e-breuninger/netbox).
Vous avez maintenant un projet complet qui utilise le provider e‚Äëbreuninger/netbox avec des alias d‚Äôenvironnement. Happy Terraforming!

Downloading model
